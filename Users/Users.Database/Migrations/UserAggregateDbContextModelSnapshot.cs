// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Users.Database.UserAggregateDatabase;

namespace Users.Database.Migrations
{
    [DbContext(typeof(UserAggregateDbContext))]
    partial class UserAggregateDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Users.Domain.Aggregates.UserAggregate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserAggregate");
                });

            modelBuilder.Entity("Users.Domain.Aggregates.UserAggregate", b =>
                {
                    b.OwnsOne("Core.Domain.ValueObjects.Email", "Email", b1 =>
                        {
                            b1.Property<Guid>("UserAggregateId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("EmailAddress")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("UserAggregateId");

                            b1.ToTable("UserAggregate");

                            b1.WithOwner()
                                .HasForeignKey("UserAggregateId");
                        });

                    b.OwnsOne("Users.Domain.ValueObjects.Photo", "Photo", b1 =>
                        {
                            b1.Property<Guid>("UserAggregateId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<byte[]>("Image")
                                .IsRequired()
                                .HasColumnType("varbinary(max)");

                            b1.HasKey("UserAggregateId");

                            b1.ToTable("UserAggregate");

                            b1.WithOwner()
                                .HasForeignKey("UserAggregateId");
                        });

                    b.Navigation("Email")
                        .IsRequired();

                    b.Navigation("Photo");
                });
#pragma warning restore 612, 618
        }
    }
}
